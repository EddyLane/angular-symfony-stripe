parameters:

    uvd.payment.controller.base_controller.class: UVd\PaymentBundle\Controller\BaseController

    uvd.payment.base_manager.class: UVd\PaymentBundle\Manager\BaseManager

    uvd.payment.entity.payment.class: UVd\PaymentBundle\Entity\Payment
    uvd.payment.payment_manager.class: UVd\PaymentBundle\Manager\PaymentManager

    uvd.payment.entity.user.class: UVd\PaymentBundle\Entity\User
    uvd.payment.user_manager.class: UVd\PaymentBundle\Manager\UserManager

    uvd.payment.stripe_provider.class: UVd\PaymentBundle\Provider\StripeProvider
    uvd.payment.stripe_proxy.class: UVd\PaymentBundle\Proxy\StripeProxy

    podcast.listener.before_controller.class: UVd\PaymentBundle\Listener\BeforeControllerListener

services:
    uvd.payment.base_manager:
        class:     %uvd.payment.base_manager.class%
        abstract:  true
        calls:
            - [ setDoctrine, [ @doctrine ] ]
            - [ setSecurityContext, [ @security.context ] ]

    uvd.payment.payment_manager:
        class: %uvd.payment.payment_manager.class%
        parent: uvd.payment.base_manager
        arguments: [%uvd.payment.entity.payment.class%]

    uvd.payment.user_manager:
        class: %uvd.payment.user_manager.class%
        parent: uvd.payment.base_manager
        arguments: [%uvd.payment.entity.user.class%]

    uvd.payment.stripe_proxy:
        class: %uvd.payment.stripe_proxy.class%
        calls:
            - [ setApiKey, [ '%stripe_secret_key%' ] ]

    uvd.payment.stripe_provider:
        class: %uvd.payment.stripe_provider.class%
        arguments: [@uvd.payment.stripe_proxy, '%stripe_secret_key%']

    before_controller:
        class: %podcast.listener.before_controller.class%
        scope: request
        tags:
            - { name:'kernel.event_listener', event: 'kernel.controller', method: 'onKernelController' }
        arguments:    [@security.context]